@using Microsoft.AspNetCore.Components.Web

<!DOCTYPE html>
<html lang="en">

<head>
    <title>@ViewData["Title"]</title>
    <link rel="icon" type="image/png" href="~/favicon/favicon.ico" />
    <link rel="stylesheet" href="~/css/index.css" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>

<body>
    <header>
        <a href="/"><img class="logo" src="~/images/icon1.png" alt="Icon1" /></a>
        <form id="navSearchForm" action="search">
            <input id="navSearchInput" autocomplete="one-time-code" class="text-box" name="SearchQuery" type="text"
                placeholder="Search...">

            <div class="navSearchOutputWrapper">
                <ul id="navSearchOutput"></ul>
            </div>
        </form>

        </div>
        @if (User.Identity != null && User.Identity.IsAuthenticated)
        {
            string avatarUrl = "" + User.FindFirst("Avatar")?.Value;
            if (avatarUrl != "")
            {
                <a class="btn" href="/Identity/Account/Logout">
                    <img class="avatar" src="@avatarUrl" />
                    @User.Identity.Name
                </a>
            }
            else
            {
                <a class="btn" href="/Identity/Account/Logout">@User.Identity.Name</a>
            }
        }
        else
        {
            <div style="display: flex; gap: 1.5rem;">
                <a class="btn" role="button" href="/Identity/Account/Login">Login</a>
                <a class="btn btn-primary" role="button" href="/Identity/Account/Register">Register</a>
            </div>
        }
    </header>
    <div class="line"></div>
    <div class=root>
        <div class=container>
            <div class="header nav-wrapper" style="min-height: 60px">
                <h2>@ViewData["Title"]</h2>
                <div>
                    <button class="skip-btn prev" onclick="skipPages(-1)"></button>
                    <button class="skip-btn" onclick="skipPages(1)"></button>
                </div>
            </div>

            @RenderBody()
        </div>
        <footer>
            Chirp &mdash; An ASP.NET Application
        </footer>

        <script>
            function skipPages(pagesToSkip) {
                if (pagesToSkip == 0) throw new Error("pagesToSkip cannot be 0");
                const urlParams = new URLSearchParams(window.location.search);
                const currentPageNum = parseInt(urlParams.get("page")) || 1;
                const newPageNum = currentPageNum + pagesToSkip;
                if (newPageNum < 1) return;

                // if root page or individual author page
                if (!urlParams.has("SearchQuery")) {
                    // string manipulation to remove leading slash for authors page
                    window.location.href = `${window.location.pathname.replace("/", "")}?page=${newPageNum}`;
                    return;
                };
                // For Search page
                const searchQuery = urlParams.get("SearchQuery") || "";
                window.location.href = `/search?SearchQuery=${searchQuery}&page=${newPageNum}`;
            }

            document.addEventListener("DOMContentLoaded", function () {
                const searchInput = document.getElementById("navSearchInput");
                const navSearchOutputWrapper = document.getElementsByClassName("navSearchOutputWrapper");

                searchInput.addEventListener("focus", function () {

                    const navSearchOutputWrapper = document.getElementsByClassName("navSearchOutputWrapper");

                    if (searchInput.value.length > 0) {
                        navSearchOutputWrapper[0].style.display = "block";
                    }
                    else {
                        navSearchOutputWrapper[0].style.display = "none";
                    }

                });

                searchInput.addEventListener("focusout", function () {
                    setTimeout(() => {
                        const navSearchOutputWrapper = document.getElementsByClassName("navSearchOutputWrapper");
                        navSearchOutputWrapper[0].style.display = "none";
                    }, 150);
                });


                searchInput.addEventListener("input", async function (event) {
                    const searchQuery = event.target.value;
                    try {
                        const response = await fetch(`/searchField?searchQuery=${encodeURIComponent(searchQuery)}&page = 1`);
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        const data = await response.json();
                        navSearchOutputWrapper[0].style.display = "block";
                        if (data.length === 0) {
                            const navSearchOutput = document.getElementById("navSearchOutput");
                            navSearchOutput.innerHTML = "No results found";
                            return;
                        }

                        const navSearchOutput = document.getElementById("navSearchOutput");
                        navSearchOutput.innerHTML = "";
                        renderAuthorsInSeach(data);
                    }
                    catch (error) {
                        console.error('There was a problem with the fetch operation:', error);
                    }
                });

                function renderAuthorsInSeach(data) {
                    data.forEach((user) => {
                        let name = user.userName;

                        const a = document.createElement("a");
                        a.className = "cheep-wrapper-mini";
                        a.href = `${name}`;
                        a.innerHTML = `
                                        <div class="cheep-avatar">
                                            ${name.charAt(0)}
                                        </div>
                                        <div class="cheep">
                                            <div class="cheep-user">
                                                <div class="cheep-author">${name}</div>
                                            </div>
                                        </div>
                                    `;
                        navSearchOutput.appendChild(a);
                    });
                }
            });
        </script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
</body>
@await RenderSectionAsync("Scripts", required: false)

</html>
