@using Microsoft.AspNetCore.Components.Web

<!DOCTYPE html>
<html lang="en">

<head>
    <title>@ViewData["Title"]</title>
    <link href="/css/index.css" rel="stylesheet" type="text/css" />
    <link rel="icon" type="image/png" href="/favicon/favicon.ico">
</head>

<body>
    <div class="header">
        <a style="justify-self: center" href="/"><img class="logo" src="/images/icon1.png" alt="Icon1" /></a>
        <form id="navSearchForm" action="search">
            <input id="navSearchInput" name="SearchQuery" type="text" placeholder="Search for user">
        </form>
        <div class="nav-wrapper">
            <span class="nav-link"><a href="/">Public Timeline</a></span>
            <span class="nav-link"><a href="/cheep">Cheeps</a></span>
        </div>
    </div>
    <div class="line"></div>
    <div class=root>
        <div class=container>
            <div class="header nav-wrapper" style="min-height: 60px">
                <h2>@ViewData["Title"]</h2>
                <div>
                    <button class="skip-btn prev" onclick="skipPages(-1)"></button>
                    <button class="skip-btn" onclick="skipPages(1)"></button>
                </div>
            </div>
            @RenderBody()
        </div>
        <div class=footer>
            Chirp &mdash; An ASP.NET Application
        </div>
    </div>

    <script>
        function skipPages(pagesToSkip) {
            if (pagesToSkip == 0) throw new Error('pagesToSkip cannot be 0');
            const urlParams = new URLSearchParams(window.location.search);
            const currentPageNum = parseInt(urlParams.get('page')) || 1;
            const newPageNum = currentPageNum + pagesToSkip;

            // if root page or individual author page
            if (!urlParams.has('SearchQuery')) {
                if (newPageNum < 1) return;
                window.location.href = `/?page=${newPageNum}`;
                return;
            };
            // For Search page
            const searchQuery = urlParams.get('SearchQuery') || '';
            if (newPageNum < 1) return;
            window.location.href = `/search?SearchQuery=${searchQuery}&page=${newPageNum}`;
        }
    </script>
</body>
@await RenderSectionAsync("Scripts", required: false)

</html>
