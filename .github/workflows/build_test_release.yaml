# This is made with the help from Patrik Svensson's article: https://patriksvensson.se/posts/2020/03/creating-release-artifacts-with-github-actions
# And 2023's BDSA-Group10's adaptation of Patrik Svensson's article: https://github.com/ITU-BDSA23-GROUP10/Chirp

name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  LINUX_BUILD_NAME: "Chirp-$GITHUB_REF_NAME-linux-x64"
  MACOS_BUILD_NAME: "Chirp-$GITHUB_REF_NAME-macos-x64"
  WINDOWS_BUILD_NAME: "Chirp-$GITHUB_REF_NAME-windows-x64"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Finalizing
        run: echo "Builded successfully!"

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Test
        run: dotnet test
      - name: Finalizing
        run: echo "Tests passed!"

  build-linux:
    runs-on: ubuntu-latest

    needs: [build, test]

    steps:
    - name: Build
      run: dotnet publish CLI/CLI.csproj -c Release -o "$LINUX_BUILD_NAME" -r linux-x64 --self-contained false
    - name: Compress
      run: 7z a "$LINUX_BUILD_NAME.zip" "./$LINUX_BUILD_NAME/*"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ LINUX_BUILD_NAME }}
        path: ./${{ LINUX_BUILD_NAME }}

  build-macos:
    runs-on: ubuntu-latest

    needs: [build, test]

    steps:
    - name: Build
      run: dotnet publish CLI/CLI.csproj -c Release -o "$MACOS_BUILD_NAME" -r osx-x64 --self-contained false
    - name: Compress
      run: 7z a "$MACOS_BUILD_NAME.zip" "./$MACOS_BUILD_NAME/*"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ MACOS_BUILD_NAME }}
        path: ./${{ MACOS_BUILD_NAME }}

  build-windows:
    runs-on: ubuntu-latest

    needs: [build, test]

    steps:
    - name: Build
      run: dotnet publish CLI/CLI.csproj -c Release -o "$WINDOWS_BUILD_NAME" -r win-x64 --self-contained false
    - name: Compress
      run: 7z a "$WINDOWS_BUILD_NAME.zip" "./$WINDOWS_BUILD_NAME/*"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ WINDOWS_BUILD_NAME }}
        path: ./${{ WINDOWS_BUILD_NAME }}

  release:
    runs-on: ubuntu-latest

    needs: [build-linux, build-macos, build-windows]

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Move zip files to root
      run: find . -name "*.zip" -exec mv {} ./ \;

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ GITHUB_REF_NAME }}
        release_name: Release ${{ GITHUB_REF_NAME }}
        files: "*.zip"
        draft: false
        prerelease: false
